// Code generated by protoc-gen-go. DO NOT EDIT.
// source: inventory/nodes.proto

package inventory

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// NodeType represents Node type.
type NodeType int32

const (
	NodeType_NODE_TYPE_INVALID NodeType = 0
	NodeType_BARE_METAL        NodeType = 1
	NodeType_VIRTUAL_MACHINE   NodeType = 2
	NodeType_CONTAINER         NodeType = 3
	NodeType_REMOTE            NodeType = 4
	NodeType_RDS               NodeType = 5
)

var NodeType_name = map[int32]string{
	0: "NODE_TYPE_INVALID",
	1: "BARE_METAL",
	2: "VIRTUAL_MACHINE",
	3: "CONTAINER",
	4: "REMOTE",
	5: "RDS",
}
var NodeType_value = map[string]int32{
	"NODE_TYPE_INVALID": 0,
	"BARE_METAL":        1,
	"VIRTUAL_MACHINE":   2,
	"CONTAINER":         3,
	"REMOTE":            4,
	"RDS":               5,
}

func (x NodeType) String() string {
	return proto.EnumName(NodeType_name, int32(x))
}
func (NodeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_nodes_5bb69443c55253c7, []int{0}
}

// BareMetalNode represents bare metal Node.
type BareMetalNode struct {
	// Unique Node identifier.
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Unique Node name.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// Hostname. Is not unique.
	Hostname             string   `protobuf:"bytes,4,opt,name=hostname,proto3" json:"hostname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BareMetalNode) Reset()         { *m = BareMetalNode{} }
func (m *BareMetalNode) String() string { return proto.CompactTextString(m) }
func (*BareMetalNode) ProtoMessage()    {}
func (*BareMetalNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodes_5bb69443c55253c7, []int{0}
}
func (m *BareMetalNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BareMetalNode.Unmarshal(m, b)
}
func (m *BareMetalNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BareMetalNode.Marshal(b, m, deterministic)
}
func (dst *BareMetalNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BareMetalNode.Merge(dst, src)
}
func (m *BareMetalNode) XXX_Size() int {
	return xxx_messageInfo_BareMetalNode.Size(m)
}
func (m *BareMetalNode) XXX_DiscardUnknown() {
	xxx_messageInfo_BareMetalNode.DiscardUnknown(m)
}

var xxx_messageInfo_BareMetalNode proto.InternalMessageInfo

func (m *BareMetalNode) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *BareMetalNode) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BareMetalNode) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

// VirtualMachineNode represents virtual machine Node.
type VirtualMachineNode struct {
	// Unique Node identifier.
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Unique Node name.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// Hostname. Is not unique.
	Hostname             string   `protobuf:"bytes,4,opt,name=hostname,proto3" json:"hostname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VirtualMachineNode) Reset()         { *m = VirtualMachineNode{} }
func (m *VirtualMachineNode) String() string { return proto.CompactTextString(m) }
func (*VirtualMachineNode) ProtoMessage()    {}
func (*VirtualMachineNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodes_5bb69443c55253c7, []int{1}
}
func (m *VirtualMachineNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VirtualMachineNode.Unmarshal(m, b)
}
func (m *VirtualMachineNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VirtualMachineNode.Marshal(b, m, deterministic)
}
func (dst *VirtualMachineNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VirtualMachineNode.Merge(dst, src)
}
func (m *VirtualMachineNode) XXX_Size() int {
	return xxx_messageInfo_VirtualMachineNode.Size(m)
}
func (m *VirtualMachineNode) XXX_DiscardUnknown() {
	xxx_messageInfo_VirtualMachineNode.DiscardUnknown(m)
}

var xxx_messageInfo_VirtualMachineNode proto.InternalMessageInfo

func (m *VirtualMachineNode) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *VirtualMachineNode) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VirtualMachineNode) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

// ContainerNode represents a container (Docker) Node.
type ContainerNode struct {
	// Unique Node identifier.
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Unique Node name.
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainerNode) Reset()         { *m = ContainerNode{} }
func (m *ContainerNode) String() string { return proto.CompactTextString(m) }
func (*ContainerNode) ProtoMessage()    {}
func (*ContainerNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodes_5bb69443c55253c7, []int{2}
}
func (m *ContainerNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerNode.Unmarshal(m, b)
}
func (m *ContainerNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerNode.Marshal(b, m, deterministic)
}
func (dst *ContainerNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerNode.Merge(dst, src)
}
func (m *ContainerNode) XXX_Size() int {
	return xxx_messageInfo_ContainerNode.Size(m)
}
func (m *ContainerNode) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerNode.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerNode proto.InternalMessageInfo

func (m *ContainerNode) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ContainerNode) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// RemoteNode represents a generic remote Node.
type RemoteNode struct {
	// Unique Node identifier.
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Unique Node name.
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoteNode) Reset()         { *m = RemoteNode{} }
func (m *RemoteNode) String() string { return proto.CompactTextString(m) }
func (*RemoteNode) ProtoMessage()    {}
func (*RemoteNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodes_5bb69443c55253c7, []int{3}
}
func (m *RemoteNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoteNode.Unmarshal(m, b)
}
func (m *RemoteNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoteNode.Marshal(b, m, deterministic)
}
func (dst *RemoteNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoteNode.Merge(dst, src)
}
func (m *RemoteNode) XXX_Size() int {
	return xxx_messageInfo_RemoteNode.Size(m)
}
func (m *RemoteNode) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoteNode.DiscardUnknown(m)
}

var xxx_messageInfo_RemoteNode proto.InternalMessageInfo

func (m *RemoteNode) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RemoteNode) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// RDSNode represents AWS RDS Node.
type RDSNode struct {
	// Unique Node identifier.
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Unique Node name.
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Region               string   `protobuf:"bytes,5,opt,name=region,proto3" json:"region,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RDSNode) Reset()         { *m = RDSNode{} }
func (m *RDSNode) String() string { return proto.CompactTextString(m) }
func (*RDSNode) ProtoMessage()    {}
func (*RDSNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodes_5bb69443c55253c7, []int{4}
}
func (m *RDSNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RDSNode.Unmarshal(m, b)
}
func (m *RDSNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RDSNode.Marshal(b, m, deterministic)
}
func (dst *RDSNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RDSNode.Merge(dst, src)
}
func (m *RDSNode) XXX_Size() int {
	return xxx_messageInfo_RDSNode.Size(m)
}
func (m *RDSNode) XXX_DiscardUnknown() {
	xxx_messageInfo_RDSNode.DiscardUnknown(m)
}

var xxx_messageInfo_RDSNode proto.InternalMessageInfo

func (m *RDSNode) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RDSNode) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RDSNode) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

type ListNodesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListNodesRequest) Reset()         { *m = ListNodesRequest{} }
func (m *ListNodesRequest) String() string { return proto.CompactTextString(m) }
func (*ListNodesRequest) ProtoMessage()    {}
func (*ListNodesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodes_5bb69443c55253c7, []int{5}
}
func (m *ListNodesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNodesRequest.Unmarshal(m, b)
}
func (m *ListNodesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNodesRequest.Marshal(b, m, deterministic)
}
func (dst *ListNodesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNodesRequest.Merge(dst, src)
}
func (m *ListNodesRequest) XXX_Size() int {
	return xxx_messageInfo_ListNodesRequest.Size(m)
}
func (m *ListNodesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNodesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListNodesRequest proto.InternalMessageInfo

type ListNodesResponse struct {
	BareMetal            []*BareMetalNode      `protobuf:"bytes,1,rep,name=bare_metal,json=bareMetal,proto3" json:"bare_metal,omitempty"`
	VirtualMachine       []*VirtualMachineNode `protobuf:"bytes,2,rep,name=virtual_machine,json=virtualMachine,proto3" json:"virtual_machine,omitempty"`
	Container            []*ContainerNode      `protobuf:"bytes,3,rep,name=container,proto3" json:"container,omitempty"`
	Remote               []*RemoteNode         `protobuf:"bytes,4,rep,name=remote,proto3" json:"remote,omitempty"`
	Rds                  []*RDSNode            `protobuf:"bytes,5,rep,name=rds,proto3" json:"rds,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ListNodesResponse) Reset()         { *m = ListNodesResponse{} }
func (m *ListNodesResponse) String() string { return proto.CompactTextString(m) }
func (*ListNodesResponse) ProtoMessage()    {}
func (*ListNodesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodes_5bb69443c55253c7, []int{6}
}
func (m *ListNodesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNodesResponse.Unmarshal(m, b)
}
func (m *ListNodesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNodesResponse.Marshal(b, m, deterministic)
}
func (dst *ListNodesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNodesResponse.Merge(dst, src)
}
func (m *ListNodesResponse) XXX_Size() int {
	return xxx_messageInfo_ListNodesResponse.Size(m)
}
func (m *ListNodesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNodesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListNodesResponse proto.InternalMessageInfo

func (m *ListNodesResponse) GetBareMetal() []*BareMetalNode {
	if m != nil {
		return m.BareMetal
	}
	return nil
}

func (m *ListNodesResponse) GetVirtualMachine() []*VirtualMachineNode {
	if m != nil {
		return m.VirtualMachine
	}
	return nil
}

func (m *ListNodesResponse) GetContainer() []*ContainerNode {
	if m != nil {
		return m.Container
	}
	return nil
}

func (m *ListNodesResponse) GetRemote() []*RemoteNode {
	if m != nil {
		return m.Remote
	}
	return nil
}

func (m *ListNodesResponse) GetRds() []*RDSNode {
	if m != nil {
		return m.Rds
	}
	return nil
}

type GetNodeRequest struct {
	// Unique Node identifier.
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNodeRequest) Reset()         { *m = GetNodeRequest{} }
func (m *GetNodeRequest) String() string { return proto.CompactTextString(m) }
func (*GetNodeRequest) ProtoMessage()    {}
func (*GetNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodes_5bb69443c55253c7, []int{7}
}
func (m *GetNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeRequest.Unmarshal(m, b)
}
func (m *GetNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeRequest.Marshal(b, m, deterministic)
}
func (dst *GetNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeRequest.Merge(dst, src)
}
func (m *GetNodeRequest) XXX_Size() int {
	return xxx_messageInfo_GetNodeRequest.Size(m)
}
func (m *GetNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeRequest proto.InternalMessageInfo

func (m *GetNodeRequest) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetNodeResponse struct {
	// Types that are valid to be assigned to Node:
	//	*GetNodeResponse_BareMetal
	//	*GetNodeResponse_VirtualMachine
	//	*GetNodeResponse_Container
	//	*GetNodeResponse_Remote
	//	*GetNodeResponse_Rds
	Node                 isGetNodeResponse_Node `protobuf_oneof:"node"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *GetNodeResponse) Reset()         { *m = GetNodeResponse{} }
func (m *GetNodeResponse) String() string { return proto.CompactTextString(m) }
func (*GetNodeResponse) ProtoMessage()    {}
func (*GetNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodes_5bb69443c55253c7, []int{8}
}
func (m *GetNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeResponse.Unmarshal(m, b)
}
func (m *GetNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeResponse.Marshal(b, m, deterministic)
}
func (dst *GetNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeResponse.Merge(dst, src)
}
func (m *GetNodeResponse) XXX_Size() int {
	return xxx_messageInfo_GetNodeResponse.Size(m)
}
func (m *GetNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeResponse proto.InternalMessageInfo

type isGetNodeResponse_Node interface {
	isGetNodeResponse_Node()
}

type GetNodeResponse_BareMetal struct {
	BareMetal *BareMetalNode `protobuf:"bytes,1,opt,name=bare_metal,json=bareMetal,proto3,oneof"`
}

type GetNodeResponse_VirtualMachine struct {
	VirtualMachine *VirtualMachineNode `protobuf:"bytes,2,opt,name=virtual_machine,json=virtualMachine,proto3,oneof"`
}

type GetNodeResponse_Container struct {
	Container *ContainerNode `protobuf:"bytes,3,opt,name=container,proto3,oneof"`
}

type GetNodeResponse_Remote struct {
	Remote *RemoteNode `protobuf:"bytes,4,opt,name=remote,proto3,oneof"`
}

type GetNodeResponse_Rds struct {
	Rds *RDSNode `protobuf:"bytes,5,opt,name=rds,proto3,oneof"`
}

func (*GetNodeResponse_BareMetal) isGetNodeResponse_Node() {}

func (*GetNodeResponse_VirtualMachine) isGetNodeResponse_Node() {}

func (*GetNodeResponse_Container) isGetNodeResponse_Node() {}

func (*GetNodeResponse_Remote) isGetNodeResponse_Node() {}

func (*GetNodeResponse_Rds) isGetNodeResponse_Node() {}

func (m *GetNodeResponse) GetNode() isGetNodeResponse_Node {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *GetNodeResponse) GetBareMetal() *BareMetalNode {
	if x, ok := m.GetNode().(*GetNodeResponse_BareMetal); ok {
		return x.BareMetal
	}
	return nil
}

func (m *GetNodeResponse) GetVirtualMachine() *VirtualMachineNode {
	if x, ok := m.GetNode().(*GetNodeResponse_VirtualMachine); ok {
		return x.VirtualMachine
	}
	return nil
}

func (m *GetNodeResponse) GetContainer() *ContainerNode {
	if x, ok := m.GetNode().(*GetNodeResponse_Container); ok {
		return x.Container
	}
	return nil
}

func (m *GetNodeResponse) GetRemote() *RemoteNode {
	if x, ok := m.GetNode().(*GetNodeResponse_Remote); ok {
		return x.Remote
	}
	return nil
}

func (m *GetNodeResponse) GetRds() *RDSNode {
	if x, ok := m.GetNode().(*GetNodeResponse_Rds); ok {
		return x.Rds
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*GetNodeResponse) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _GetNodeResponse_OneofMarshaler, _GetNodeResponse_OneofUnmarshaler, _GetNodeResponse_OneofSizer, []interface{}{
		(*GetNodeResponse_BareMetal)(nil),
		(*GetNodeResponse_VirtualMachine)(nil),
		(*GetNodeResponse_Container)(nil),
		(*GetNodeResponse_Remote)(nil),
		(*GetNodeResponse_Rds)(nil),
	}
}

func _GetNodeResponse_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*GetNodeResponse)
	// node
	switch x := m.Node.(type) {
	case *GetNodeResponse_BareMetal:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BareMetal); err != nil {
			return err
		}
	case *GetNodeResponse_VirtualMachine:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.VirtualMachine); err != nil {
			return err
		}
	case *GetNodeResponse_Container:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Container); err != nil {
			return err
		}
	case *GetNodeResponse_Remote:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Remote); err != nil {
			return err
		}
	case *GetNodeResponse_Rds:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Rds); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("GetNodeResponse.Node has unexpected type %T", x)
	}
	return nil
}

func _GetNodeResponse_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*GetNodeResponse)
	switch tag {
	case 1: // node.bare_metal
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BareMetalNode)
		err := b.DecodeMessage(msg)
		m.Node = &GetNodeResponse_BareMetal{msg}
		return true, err
	case 2: // node.virtual_machine
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(VirtualMachineNode)
		err := b.DecodeMessage(msg)
		m.Node = &GetNodeResponse_VirtualMachine{msg}
		return true, err
	case 3: // node.container
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ContainerNode)
		err := b.DecodeMessage(msg)
		m.Node = &GetNodeResponse_Container{msg}
		return true, err
	case 4: // node.remote
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RemoteNode)
		err := b.DecodeMessage(msg)
		m.Node = &GetNodeResponse_Remote{msg}
		return true, err
	case 5: // node.rds
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RDSNode)
		err := b.DecodeMessage(msg)
		m.Node = &GetNodeResponse_Rds{msg}
		return true, err
	default:
		return false, nil
	}
}

func _GetNodeResponse_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*GetNodeResponse)
	// node
	switch x := m.Node.(type) {
	case *GetNodeResponse_BareMetal:
		s := proto.Size(x.BareMetal)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GetNodeResponse_VirtualMachine:
		s := proto.Size(x.VirtualMachine)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GetNodeResponse_Container:
		s := proto.Size(x.Container)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GetNodeResponse_Remote:
		s := proto.Size(x.Remote)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GetNodeResponse_Rds:
		s := proto.Size(x.Rds)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type AddNodeRequest struct {
	// Node type.
	Type NodeType `protobuf:"varint,2,opt,name=type,proto3,enum=inventory.NodeType" json:"type,omitempty"`
	// Unique Node name.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// Hostname. Is not unique.
	Hostname             string   `protobuf:"bytes,4,opt,name=hostname,proto3" json:"hostname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddNodeRequest) Reset()         { *m = AddNodeRequest{} }
func (m *AddNodeRequest) String() string { return proto.CompactTextString(m) }
func (*AddNodeRequest) ProtoMessage()    {}
func (*AddNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodes_5bb69443c55253c7, []int{9}
}
func (m *AddNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddNodeRequest.Unmarshal(m, b)
}
func (m *AddNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddNodeRequest.Marshal(b, m, deterministic)
}
func (dst *AddNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddNodeRequest.Merge(dst, src)
}
func (m *AddNodeRequest) XXX_Size() int {
	return xxx_messageInfo_AddNodeRequest.Size(m)
}
func (m *AddNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddNodeRequest proto.InternalMessageInfo

func (m *AddNodeRequest) GetType() NodeType {
	if m != nil {
		return m.Type
	}
	return NodeType_NODE_TYPE_INVALID
}

func (m *AddNodeRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AddNodeRequest) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

type AddNodeResponse struct {
	// Types that are valid to be assigned to Node:
	//	*AddNodeResponse_BareMetal
	//	*AddNodeResponse_VirtualMachine
	//	*AddNodeResponse_Container
	Node                 isAddNodeResponse_Node `protobuf_oneof:"node"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *AddNodeResponse) Reset()         { *m = AddNodeResponse{} }
func (m *AddNodeResponse) String() string { return proto.CompactTextString(m) }
func (*AddNodeResponse) ProtoMessage()    {}
func (*AddNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodes_5bb69443c55253c7, []int{10}
}
func (m *AddNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddNodeResponse.Unmarshal(m, b)
}
func (m *AddNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddNodeResponse.Marshal(b, m, deterministic)
}
func (dst *AddNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddNodeResponse.Merge(dst, src)
}
func (m *AddNodeResponse) XXX_Size() int {
	return xxx_messageInfo_AddNodeResponse.Size(m)
}
func (m *AddNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddNodeResponse proto.InternalMessageInfo

type isAddNodeResponse_Node interface {
	isAddNodeResponse_Node()
}

type AddNodeResponse_BareMetal struct {
	BareMetal *BareMetalNode `protobuf:"bytes,1,opt,name=bare_metal,json=bareMetal,proto3,oneof"`
}

type AddNodeResponse_VirtualMachine struct {
	VirtualMachine *VirtualMachineNode `protobuf:"bytes,2,opt,name=virtual_machine,json=virtualMachine,proto3,oneof"`
}

type AddNodeResponse_Container struct {
	Container *ContainerNode `protobuf:"bytes,3,opt,name=container,proto3,oneof"`
}

func (*AddNodeResponse_BareMetal) isAddNodeResponse_Node() {}

func (*AddNodeResponse_VirtualMachine) isAddNodeResponse_Node() {}

func (*AddNodeResponse_Container) isAddNodeResponse_Node() {}

func (m *AddNodeResponse) GetNode() isAddNodeResponse_Node {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *AddNodeResponse) GetBareMetal() *BareMetalNode {
	if x, ok := m.GetNode().(*AddNodeResponse_BareMetal); ok {
		return x.BareMetal
	}
	return nil
}

func (m *AddNodeResponse) GetVirtualMachine() *VirtualMachineNode {
	if x, ok := m.GetNode().(*AddNodeResponse_VirtualMachine); ok {
		return x.VirtualMachine
	}
	return nil
}

func (m *AddNodeResponse) GetContainer() *ContainerNode {
	if x, ok := m.GetNode().(*AddNodeResponse_Container); ok {
		return x.Container
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*AddNodeResponse) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _AddNodeResponse_OneofMarshaler, _AddNodeResponse_OneofUnmarshaler, _AddNodeResponse_OneofSizer, []interface{}{
		(*AddNodeResponse_BareMetal)(nil),
		(*AddNodeResponse_VirtualMachine)(nil),
		(*AddNodeResponse_Container)(nil),
	}
}

func _AddNodeResponse_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*AddNodeResponse)
	// node
	switch x := m.Node.(type) {
	case *AddNodeResponse_BareMetal:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BareMetal); err != nil {
			return err
		}
	case *AddNodeResponse_VirtualMachine:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.VirtualMachine); err != nil {
			return err
		}
	case *AddNodeResponse_Container:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Container); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("AddNodeResponse.Node has unexpected type %T", x)
	}
	return nil
}

func _AddNodeResponse_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*AddNodeResponse)
	switch tag {
	case 1: // node.bare_metal
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BareMetalNode)
		err := b.DecodeMessage(msg)
		m.Node = &AddNodeResponse_BareMetal{msg}
		return true, err
	case 2: // node.virtual_machine
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(VirtualMachineNode)
		err := b.DecodeMessage(msg)
		m.Node = &AddNodeResponse_VirtualMachine{msg}
		return true, err
	case 3: // node.container
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ContainerNode)
		err := b.DecodeMessage(msg)
		m.Node = &AddNodeResponse_Container{msg}
		return true, err
	default:
		return false, nil
	}
}

func _AddNodeResponse_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*AddNodeResponse)
	// node
	switch x := m.Node.(type) {
	case *AddNodeResponse_BareMetal:
		s := proto.Size(x.BareMetal)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AddNodeResponse_VirtualMachine:
		s := proto.Size(x.VirtualMachine)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AddNodeResponse_Container:
		s := proto.Size(x.Container)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type AddRemoteNodeRequest struct {
	// Unique Node name.
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddRemoteNodeRequest) Reset()         { *m = AddRemoteNodeRequest{} }
func (m *AddRemoteNodeRequest) String() string { return proto.CompactTextString(m) }
func (*AddRemoteNodeRequest) ProtoMessage()    {}
func (*AddRemoteNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodes_5bb69443c55253c7, []int{11}
}
func (m *AddRemoteNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddRemoteNodeRequest.Unmarshal(m, b)
}
func (m *AddRemoteNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddRemoteNodeRequest.Marshal(b, m, deterministic)
}
func (dst *AddRemoteNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddRemoteNodeRequest.Merge(dst, src)
}
func (m *AddRemoteNodeRequest) XXX_Size() int {
	return xxx_messageInfo_AddRemoteNodeRequest.Size(m)
}
func (m *AddRemoteNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddRemoteNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddRemoteNodeRequest proto.InternalMessageInfo

func (m *AddRemoteNodeRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type AddRemoteNodeResponse struct {
	Remote               *RemoteNode `protobuf:"bytes,1,opt,name=remote,proto3" json:"remote,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *AddRemoteNodeResponse) Reset()         { *m = AddRemoteNodeResponse{} }
func (m *AddRemoteNodeResponse) String() string { return proto.CompactTextString(m) }
func (*AddRemoteNodeResponse) ProtoMessage()    {}
func (*AddRemoteNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodes_5bb69443c55253c7, []int{12}
}
func (m *AddRemoteNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddRemoteNodeResponse.Unmarshal(m, b)
}
func (m *AddRemoteNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddRemoteNodeResponse.Marshal(b, m, deterministic)
}
func (dst *AddRemoteNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddRemoteNodeResponse.Merge(dst, src)
}
func (m *AddRemoteNodeResponse) XXX_Size() int {
	return xxx_messageInfo_AddRemoteNodeResponse.Size(m)
}
func (m *AddRemoteNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddRemoteNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddRemoteNodeResponse proto.InternalMessageInfo

func (m *AddRemoteNodeResponse) GetRemote() *RemoteNode {
	if m != nil {
		return m.Remote
	}
	return nil
}

type AddRDSNodeRequest struct {
	// Unique Node name.
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddRDSNodeRequest) Reset()         { *m = AddRDSNodeRequest{} }
func (m *AddRDSNodeRequest) String() string { return proto.CompactTextString(m) }
func (*AddRDSNodeRequest) ProtoMessage()    {}
func (*AddRDSNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodes_5bb69443c55253c7, []int{13}
}
func (m *AddRDSNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddRDSNodeRequest.Unmarshal(m, b)
}
func (m *AddRDSNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddRDSNodeRequest.Marshal(b, m, deterministic)
}
func (dst *AddRDSNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddRDSNodeRequest.Merge(dst, src)
}
func (m *AddRDSNodeRequest) XXX_Size() int {
	return xxx_messageInfo_AddRDSNodeRequest.Size(m)
}
func (m *AddRDSNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddRDSNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddRDSNodeRequest proto.InternalMessageInfo

func (m *AddRDSNodeRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type AddRDSNodeResponse struct {
	Rds                  *RDSNode `protobuf:"bytes,1,opt,name=rds,proto3" json:"rds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddRDSNodeResponse) Reset()         { *m = AddRDSNodeResponse{} }
func (m *AddRDSNodeResponse) String() string { return proto.CompactTextString(m) }
func (*AddRDSNodeResponse) ProtoMessage()    {}
func (*AddRDSNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodes_5bb69443c55253c7, []int{14}
}
func (m *AddRDSNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddRDSNodeResponse.Unmarshal(m, b)
}
func (m *AddRDSNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddRDSNodeResponse.Marshal(b, m, deterministic)
}
func (dst *AddRDSNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddRDSNodeResponse.Merge(dst, src)
}
func (m *AddRDSNodeResponse) XXX_Size() int {
	return xxx_messageInfo_AddRDSNodeResponse.Size(m)
}
func (m *AddRDSNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddRDSNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddRDSNodeResponse proto.InternalMessageInfo

func (m *AddRDSNodeResponse) GetRds() *RDSNode {
	if m != nil {
		return m.Rds
	}
	return nil
}

type RemoveNodeRequest struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveNodeRequest) Reset()         { *m = RemoveNodeRequest{} }
func (m *RemoveNodeRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveNodeRequest) ProtoMessage()    {}
func (*RemoveNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodes_5bb69443c55253c7, []int{15}
}
func (m *RemoveNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveNodeRequest.Unmarshal(m, b)
}
func (m *RemoveNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveNodeRequest.Marshal(b, m, deterministic)
}
func (dst *RemoveNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveNodeRequest.Merge(dst, src)
}
func (m *RemoveNodeRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveNodeRequest.Size(m)
}
func (m *RemoveNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveNodeRequest proto.InternalMessageInfo

func (m *RemoveNodeRequest) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type RemoveNodeResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveNodeResponse) Reset()         { *m = RemoveNodeResponse{} }
func (m *RemoveNodeResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveNodeResponse) ProtoMessage()    {}
func (*RemoveNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodes_5bb69443c55253c7, []int{16}
}
func (m *RemoveNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveNodeResponse.Unmarshal(m, b)
}
func (m *RemoveNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveNodeResponse.Marshal(b, m, deterministic)
}
func (dst *RemoveNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveNodeResponse.Merge(dst, src)
}
func (m *RemoveNodeResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveNodeResponse.Size(m)
}
func (m *RemoveNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveNodeResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*BareMetalNode)(nil), "inventory.BareMetalNode")
	proto.RegisterType((*VirtualMachineNode)(nil), "inventory.VirtualMachineNode")
	proto.RegisterType((*ContainerNode)(nil), "inventory.ContainerNode")
	proto.RegisterType((*RemoteNode)(nil), "inventory.RemoteNode")
	proto.RegisterType((*RDSNode)(nil), "inventory.RDSNode")
	proto.RegisterType((*ListNodesRequest)(nil), "inventory.ListNodesRequest")
	proto.RegisterType((*ListNodesResponse)(nil), "inventory.ListNodesResponse")
	proto.RegisterType((*GetNodeRequest)(nil), "inventory.GetNodeRequest")
	proto.RegisterType((*GetNodeResponse)(nil), "inventory.GetNodeResponse")
	proto.RegisterType((*AddNodeRequest)(nil), "inventory.AddNodeRequest")
	proto.RegisterType((*AddNodeResponse)(nil), "inventory.AddNodeResponse")
	proto.RegisterType((*AddRemoteNodeRequest)(nil), "inventory.AddRemoteNodeRequest")
	proto.RegisterType((*AddRemoteNodeResponse)(nil), "inventory.AddRemoteNodeResponse")
	proto.RegisterType((*AddRDSNodeRequest)(nil), "inventory.AddRDSNodeRequest")
	proto.RegisterType((*AddRDSNodeResponse)(nil), "inventory.AddRDSNodeResponse")
	proto.RegisterType((*RemoveNodeRequest)(nil), "inventory.RemoveNodeRequest")
	proto.RegisterType((*RemoveNodeResponse)(nil), "inventory.RemoveNodeResponse")
	proto.RegisterEnum("inventory.NodeType", NodeType_name, NodeType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NodesClient is the client API for Nodes service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NodesClient interface {
	// ListNodes returns a list of all Nodes.
	ListNodes(ctx context.Context, in *ListNodesRequest, opts ...grpc.CallOption) (*ListNodesResponse, error)
	// GetNode returns a single Node by ID.
	GetNode(ctx context.Context, in *GetNodeRequest, opts ...grpc.CallOption) (*GetNodeResponse, error)
	// AddNode adds bare metal, virtual machine, or container node Node.
	AddNode(ctx context.Context, in *AddNodeRequest, opts ...grpc.CallOption) (*AddNodeResponse, error)
	// AddRemoteNode adds remote Node.
	AddRemoteNode(ctx context.Context, in *AddRemoteNodeRequest, opts ...grpc.CallOption) (*AddRemoteNodeResponse, error)
	// AddRDSNode adds AWS RDS Node.
	AddRDSNode(ctx context.Context, in *AddRDSNodeRequest, opts ...grpc.CallOption) (*AddRDSNodeResponse, error)
	// RemoveNode removes Node without any Agents and Services.
	RemoveNode(ctx context.Context, in *RemoveNodeRequest, opts ...grpc.CallOption) (*RemoveNodeResponse, error)
}

type nodesClient struct {
	cc *grpc.ClientConn
}

func NewNodesClient(cc *grpc.ClientConn) NodesClient {
	return &nodesClient{cc}
}

func (c *nodesClient) ListNodes(ctx context.Context, in *ListNodesRequest, opts ...grpc.CallOption) (*ListNodesResponse, error) {
	out := new(ListNodesResponse)
	err := c.cc.Invoke(ctx, "/inventory.Nodes/ListNodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodesClient) GetNode(ctx context.Context, in *GetNodeRequest, opts ...grpc.CallOption) (*GetNodeResponse, error) {
	out := new(GetNodeResponse)
	err := c.cc.Invoke(ctx, "/inventory.Nodes/GetNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodesClient) AddNode(ctx context.Context, in *AddNodeRequest, opts ...grpc.CallOption) (*AddNodeResponse, error) {
	out := new(AddNodeResponse)
	err := c.cc.Invoke(ctx, "/inventory.Nodes/AddNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodesClient) AddRemoteNode(ctx context.Context, in *AddRemoteNodeRequest, opts ...grpc.CallOption) (*AddRemoteNodeResponse, error) {
	out := new(AddRemoteNodeResponse)
	err := c.cc.Invoke(ctx, "/inventory.Nodes/AddRemoteNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodesClient) AddRDSNode(ctx context.Context, in *AddRDSNodeRequest, opts ...grpc.CallOption) (*AddRDSNodeResponse, error) {
	out := new(AddRDSNodeResponse)
	err := c.cc.Invoke(ctx, "/inventory.Nodes/AddRDSNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodesClient) RemoveNode(ctx context.Context, in *RemoveNodeRequest, opts ...grpc.CallOption) (*RemoveNodeResponse, error) {
	out := new(RemoveNodeResponse)
	err := c.cc.Invoke(ctx, "/inventory.Nodes/RemoveNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NodesServer is the server API for Nodes service.
type NodesServer interface {
	// ListNodes returns a list of all Nodes.
	ListNodes(context.Context, *ListNodesRequest) (*ListNodesResponse, error)
	// GetNode returns a single Node by ID.
	GetNode(context.Context, *GetNodeRequest) (*GetNodeResponse, error)
	// AddNode adds bare metal, virtual machine, or container node Node.
	AddNode(context.Context, *AddNodeRequest) (*AddNodeResponse, error)
	// AddRemoteNode adds remote Node.
	AddRemoteNode(context.Context, *AddRemoteNodeRequest) (*AddRemoteNodeResponse, error)
	// AddRDSNode adds AWS RDS Node.
	AddRDSNode(context.Context, *AddRDSNodeRequest) (*AddRDSNodeResponse, error)
	// RemoveNode removes Node without any Agents and Services.
	RemoveNode(context.Context, *RemoveNodeRequest) (*RemoveNodeResponse, error)
}

func RegisterNodesServer(s *grpc.Server, srv NodesServer) {
	s.RegisterService(&_Nodes_serviceDesc, srv)
}

func _Nodes_ListNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListNodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodesServer).ListNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inventory.Nodes/ListNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodesServer).ListNodes(ctx, req.(*ListNodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Nodes_GetNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodesServer).GetNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inventory.Nodes/GetNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodesServer).GetNode(ctx, req.(*GetNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Nodes_AddNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodesServer).AddNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inventory.Nodes/AddNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodesServer).AddNode(ctx, req.(*AddNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Nodes_AddRemoteNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRemoteNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodesServer).AddRemoteNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inventory.Nodes/AddRemoteNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodesServer).AddRemoteNode(ctx, req.(*AddRemoteNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Nodes_AddRDSNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRDSNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodesServer).AddRDSNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inventory.Nodes/AddRDSNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodesServer).AddRDSNode(ctx, req.(*AddRDSNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Nodes_RemoveNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodesServer).RemoveNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inventory.Nodes/RemoveNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodesServer).RemoveNode(ctx, req.(*RemoveNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Nodes_serviceDesc = grpc.ServiceDesc{
	ServiceName: "inventory.Nodes",
	HandlerType: (*NodesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListNodes",
			Handler:    _Nodes_ListNodes_Handler,
		},
		{
			MethodName: "GetNode",
			Handler:    _Nodes_GetNode_Handler,
		},
		{
			MethodName: "AddNode",
			Handler:    _Nodes_AddNode_Handler,
		},
		{
			MethodName: "AddRemoteNode",
			Handler:    _Nodes_AddRemoteNode_Handler,
		},
		{
			MethodName: "AddRDSNode",
			Handler:    _Nodes_AddRDSNode_Handler,
		},
		{
			MethodName: "RemoveNode",
			Handler:    _Nodes_RemoveNode_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "inventory/nodes.proto",
}

func init() { proto.RegisterFile("inventory/nodes.proto", fileDescriptor_nodes_5bb69443c55253c7) }

var fileDescriptor_nodes_5bb69443c55253c7 = []byte{
	// 830 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x96, 0xdd, 0x4e, 0xe3, 0x46,
	0x14, 0xc7, 0x33, 0x8e, 0x13, 0x92, 0x53, 0x25, 0x71, 0x06, 0x52, 0xb9, 0x01, 0xda, 0xd4, 0x54,
	0x34, 0x45, 0x2d, 0xa9, 0xa8, 0xd4, 0x16, 0x84, 0x54, 0x19, 0x62, 0x9a, 0xa0, 0x24, 0xb4, 0x43,
	0x40, 0x6a, 0x6f, 0x22, 0x83, 0x47, 0xe0, 0x8a, 0xd8, 0xa9, 0x6d, 0x22, 0x71, 0xb7, 0xda, 0x57,
	0xd8, 0x27, 0xd8, 0x47, 0xd8, 0xfb, 0x7d, 0x8b, 0xbd, 0xd9, 0x07, 0xd8, 0x07, 0x59, 0x79, 0x3c,
	0xf1, 0x47, 0xbe, 0x96, 0x45, 0x7b, 0xb5, 0x77, 0x78, 0xfc, 0x3f, 0xe7, 0x3f, 0xfe, 0x9d, 0x0f,
	0x02, 0x15, 0xd3, 0x1a, 0x53, 0xcb, 0xb3, 0x9d, 0x87, 0x86, 0x65, 0x1b, 0xd4, 0xdd, 0x1d, 0x39,
	0xb6, 0x67, 0xe3, 0x7c, 0x78, 0x5c, 0xdd, 0xb8, 0xb1, 0xed, 0x9b, 0x3b, 0xda, 0xd0, 0x47, 0x66,
	0x43, 0xb7, 0x2c, 0xdb, 0xd3, 0x3d, 0xd3, 0xb6, 0xb8, 0x50, 0xb9, 0x80, 0xc2, 0x91, 0xee, 0xd0,
	0x2e, 0xf5, 0xf4, 0xbb, 0x9e, 0x6d, 0x50, 0x5c, 0x04, 0xc1, 0x34, 0x64, 0x54, 0x43, 0xf5, 0x02,
	0x11, 0x4c, 0x03, 0x63, 0x10, 0x2d, 0x7d, 0x48, 0xe5, 0x74, 0x0d, 0xd5, 0xf3, 0x84, 0xfd, 0x8d,
	0xab, 0x90, 0xbb, 0xb5, 0x5d, 0x8f, 0x9d, 0x8b, 0xec, 0x3c, 0x7c, 0x3e, 0x15, 0x73, 0x82, 0x94,
	0x56, 0xfe, 0x05, 0x7c, 0x69, 0x3a, 0xde, 0xbd, 0x7e, 0xd7, 0xd5, 0xaf, 0x6f, 0x4d, 0x8b, 0x7e,
	0xc2, 0xdc, 0x7f, 0x40, 0xe1, 0xd8, 0xb6, 0x3c, 0xdd, 0xb4, 0xa8, 0xf3, 0xd8, 0xb4, 0x41, 0xe8,
	0xa9, 0x98, 0x13, 0xa5, 0x8c, 0x72, 0x08, 0x40, 0xe8, 0xd0, 0xf6, 0xe8, 0x93, 0xa2, 0xff, 0x86,
	0x15, 0xd2, 0x3c, 0x7f, 0xf4, 0xf7, 0x7c, 0x09, 0x59, 0x87, 0xde, 0x98, 0xb6, 0x25, 0x67, 0xd8,
	0x29, 0x7f, 0x4a, 0xa4, 0xc4, 0x20, 0x75, 0x4c, 0xd7, 0xf3, 0x73, 0xba, 0x84, 0xfe, 0x7f, 0x4f,
	0x5d, 0x4f, 0x79, 0x29, 0x40, 0x39, 0x76, 0xe8, 0x8e, 0x6c, 0xcb, 0xa5, 0xf8, 0x37, 0x80, 0x2b,
	0xdd, 0xa1, 0x83, 0xa1, 0x5f, 0x2f, 0x19, 0xd5, 0xd2, 0xf5, 0x2f, 0xf6, 0xe4, 0xdd, 0xb0, 0xd8,
	0xbb, 0x89, 0x5a, 0x92, 0xfc, 0xd5, 0xe4, 0x11, 0x9f, 0x40, 0x69, 0x1c, 0x14, 0x64, 0x30, 0x0c,
	0x2a, 0x22, 0x0b, 0x2c, 0x7a, 0x33, 0x16, 0x3d, 0x5b, 0x32, 0x52, 0x1c, 0x27, 0xce, 0xf0, 0xaf,
	0x90, 0xbf, 0x9e, 0xc0, 0x97, 0xd3, 0x33, 0xfe, 0x89, 0xc2, 0x90, 0x48, 0x8a, 0x7f, 0xf2, 0x31,
	0xf8, 0xcc, 0x65, 0x91, 0x05, 0x55, 0x62, 0x41, 0x51, 0x31, 0x08, 0x17, 0xe1, 0xef, 0x20, 0xed,
	0x18, 0xae, 0x9c, 0x61, 0x5a, 0x1c, 0xd7, 0x06, 0xe8, 0x89, 0xff, 0x5a, 0xa9, 0x41, 0xf1, 0x4f,
	0xca, 0x08, 0x71, 0x6a, 0xd3, 0x15, 0x51, 0x5e, 0x09, 0x50, 0x0a, 0x25, 0x9c, 0xe1, 0xfe, 0x14,
	0x43, 0xb4, 0x8c, 0x61, 0x2b, 0x15, 0xa7, 0xd8, 0x9a, 0x47, 0x11, 0x7d, 0x90, 0x62, 0x2b, 0x35,
	0xc3, 0xf1, 0xf7, 0x24, 0x47, 0xb4, 0x8c, 0xa3, 0x7f, 0x87, 0x88, 0x64, 0x23, 0x46, 0x12, 0x2d,
	0x24, 0xd9, 0x4a, 0x85, 0x2c, 0xb7, 0x27, 0x2c, 0xd1, 0x7c, 0x96, 0xad, 0x14, 0xa3, 0x79, 0x94,
	0x05, 0xd1, 0x5f, 0x21, 0x8a, 0x0d, 0x45, 0xd5, 0x30, 0xe2, 0x54, 0xbf, 0x07, 0xd1, 0x7b, 0x18,
	0x05, 0xdf, 0x5a, 0xdc, 0x5b, 0x8d, 0xa5, 0xf0, 0x55, 0xfd, 0x87, 0x11, 0x25, 0x4c, 0xf0, 0x84,
	0x81, 0x46, 0x92, 0xa0, 0xbc, 0x45, 0x50, 0x0a, 0x1d, 0x3f, 0x8b, 0x22, 0x85, 0x2c, 0x0f, 0x61,
	0x4d, 0x35, 0x8c, 0x58, 0x83, 0x73, 0xa2, 0xf3, 0x97, 0x0c, 0x92, 0x84, 0xc4, 0x5e, 0x38, 0x81,
	0xca, 0x54, 0x34, 0xa7, 0x13, 0x4d, 0x13, 0x5a, 0xd2, 0x03, 0x93, 0x0e, 0x50, 0xf6, 0xa1, 0xec,
	0xe7, 0xe1, 0xa3, 0xf3, 0x51, 0x57, 0x38, 0x00, 0x1c, 0x0f, 0xe5, 0xfe, 0x7c, 0x3c, 0xd1, 0xa2,
	0x96, 0x0a, 0xc6, 0x73, 0x0b, 0xca, 0xfe, 0x65, 0xc6, 0x74, 0xd9, 0x84, 0xae, 0x01, 0x8e, 0x8b,
	0x02, 0x83, 0x9d, 0xff, 0x20, 0x37, 0x69, 0x2d, 0x5c, 0x81, 0x72, 0xef, 0xac, 0xa9, 0x0d, 0xfa,
	0xff, 0xfc, 0xa5, 0x0d, 0xda, 0xbd, 0x4b, 0xb5, 0xd3, 0x6e, 0x4a, 0x29, 0x5c, 0x04, 0x38, 0x52,
	0x89, 0x36, 0xe8, 0x6a, 0x7d, 0xb5, 0x23, 0x21, 0xbc, 0x0a, 0xa5, 0xcb, 0x36, 0xe9, 0x5f, 0xa8,
	0x9d, 0x41, 0x57, 0x3d, 0x6e, 0xb5, 0x7b, 0x9a, 0x24, 0xe0, 0x02, 0xe4, 0x8f, 0xcf, 0x7a, 0x7d,
	0xb5, 0xdd, 0xd3, 0x88, 0x94, 0xc6, 0x00, 0x59, 0xa2, 0x75, 0xcf, 0xfa, 0x9a, 0x24, 0xe2, 0x15,
	0x48, 0x93, 0xe6, 0xb9, 0x94, 0xd9, 0x7b, 0x9d, 0x81, 0x0c, 0xdb, 0xb2, 0x78, 0x04, 0xf9, 0x70,
	0xe5, 0xe2, 0xf5, 0xd8, 0x67, 0x4d, 0x6f, 0xe7, 0xea, 0xc6, 0xfc, 0x97, 0xc1, 0xed, 0x95, 0xfa,
	0xf3, 0x37, 0xef, 0x5e, 0x08, 0x8a, 0xb2, 0xd9, 0x18, 0xff, 0xdc, 0x88, 0xfe, 0x41, 0x33, 0x51,
	0x23, 0x94, 0x1f, 0xa0, 0x1d, 0x7c, 0x0b, 0x2b, 0x7c, 0x3d, 0xe1, 0xaf, 0x62, 0x29, 0x93, 0x5b,
	0xad, 0x5a, 0x9d, 0xf7, 0x8a, 0x7b, 0x6d, 0x33, 0xaf, 0x9a, 0xb2, 0x3e, 0xcf, 0x8b, 0x8b, 0xb9,
	0x13, 0x9f, 0xb1, 0x84, 0x53, 0x72, 0xd2, 0x13, 0x4e, 0x53, 0x23, 0xb9, 0xdc, 0x89, 0x8b, 0x7d,
	0xa7, 0x67, 0x08, 0x0a, 0x89, 0xb6, 0xc5, 0xdf, 0x24, 0xb3, 0xce, 0x8c, 0x43, 0xb5, 0xb6, 0x58,
	0xc0, 0xcd, 0x7f, 0x64, 0xe6, 0xdb, 0xca, 0xb7, 0x0b, 0xcc, 0xa3, 0x10, 0xff, 0x0a, 0x1e, 0x40,
	0xd4, 0xb5, 0x78, 0x63, 0x2a, 0x7b, 0x62, 0x0e, 0xaa, 0x9b, 0x0b, 0xde, 0x72, 0xe3, 0x1f, 0x98,
	0xf1, 0x96, 0xf2, 0xf5, 0x22, 0xe3, 0x40, 0xcf, 0x5d, 0xa3, 0x56, 0x4e, 0xb8, 0xce, 0x8c, 0x41,
	0xc2, 0x75, 0xb6, 0xff, 0x97, 0xbb, 0x46, 0xfa, 0x03, 0xb4, 0x73, 0x95, 0x65, 0x3f, 0xe4, 0x7e,
	0x79, 0x1f, 0x00, 0x00, 0xff, 0xff, 0x1e, 0x8e, 0x10, 0x34, 0x0a, 0x0a, 0x00, 0x00,
}
